name: 'Github Release and Slack Notification'
description: 'Sends Slack Notification for your GitHub Release with Changelog attached.'
inputs:
  projectName:
    description: 'Name of the project'
    required: true
  # COMMAND:
  #   required: true

permissions:
  contents: read
  id-token: write

runs:
  using: "composite"
  steps:
    - name: Set version name
      id: release_version
      shell: pwsh
      run: |
        $branchName = $env:BranchName
        $shortHash = "$env:SHA".Substring(0, 7)
        $dateTime = Get-Date -Format "yyyy.MM.dd" 
        $versionName = "$branchName.$dateTime.$env:Rev.$shortHash"
        Write-Host "Version Name: $versionName"
        "version=$versionName" | Out-File -FilePath $env:GITHUB_OUTPUT -Append -Encoding utf8
      env:
        BranchName: ${{ github.ref_name }}
        Date: ${{ github.event.head_commit.timestamp }}
        Rev: ${{ github.run_number }}
        SHA: ${{ github.sha }}

    - name: GitHub Release
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ steps.release_version.outputs.version }}
        name: Release ${{ steps.release_version.outputs.version }}
        commit: ${{ github.sha }}
        draft: false
        prerelease: false
        generateReleaseNotes: true
        skipIfReleaseExists: true
        makeLatest: true

    - name: Assume AWS management account role
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::865076270365:role/github-ci-slack-webhook-url-read-role
        aws-region: eu-west-1
        role-session-name: "GitHubActions-DeployLayerStack"
        unset-current-credentials: true
    
    - name: Read Slack Webhook URL AWS Secret value
      id: slack_webhook_url
      run: |
        SLACK_WEBHOOK_URL=$(aws secretsmanager get-secret-value --secret-id arn:aws:secretsmanager:eu-west-1:865076270365:secret:SlackGithubActionsWebhookURL-vZcXfi --query SecretString --output text)
        echo "webhook_url=$SLACK_WEBHOOK_URL" >> $GITHUB_OUTPUT
      shell: bash
  
    - name: Read GitHub Release Changelog via GH CLI
      id: release_notes
      run: |
        GH_RELEASE_NOTES=$(gh release view ${{ github.event.release.tag_name }} --json body --repo ${{ github.repository }} --jq '.body')
        echo "GH_RELEASE_NOTES=$GH_RELEASE_NOTES" >> $GITHUB_OUTPUT
      shell: bash
      env:
        GH_TOKEN: ${{ github.token }}

    - name: Sending Slack notification
      shell: pwsh
      run: |
        if (Get-Module -ListAvailable -Name PSSlack) {
          Write-Host "PSSlack module already Installed"
        } else {
          Write-Host "Installing PSSlack module"
          Install-Module -Name PSSlack -Force
        }
        $messageTextVersion = $env:Version
        $messageTextDone = "Changelog: $env:releaseNotes"
        $channel = $env:SlackChannel
        $slack_webhook_url_secret = $env:SlackWebhookUrl

        New-SlackMessageAttachment -Color '#008000' `
              -Title "$env:ProjectName ($messageTextVersion) - Successfuly Released" `
              -AuthorName "GitHub Actions" `
              -AuthorIcon "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png" `
              -TitleLink "https://$env:workflowRef" `
              -Text "$messageTextDone" `
              -Fallback "Release completed" | New-SlackMessage -Channel $channel | Send-SlackMessage -Uri $slack_webhook_url_secret
      env: 
        SlackWebhookUrl: ${{ steps.slack_webhook_url.outputs.webhook_url }}
        SlackChannel: 'test-alerts'
        ProjectName: ${{ inputs.projectName }}
        workflowRef: ${{ github.workflow_ref }}
        Version: ${{ steps.release_version.outputs.version }}
        releaseNotes: ${{ steps.release_notes.outputs.GH_RELEASE_NOTES }}

    # - name: Sending Slack notification
    #   run: |
    #     curl -X POST -H 'Content-type: application/json' --data '{"text": "New Release: ${{ github.event.release.tag_name }}\n\n${{ env.GH_RELEASE_NOTES }}"}' $SLACK_WEBHOOK_URL
    #   shell: bash
    #   env:
    #       SLACK_WEBHOOK_URL: ${{ env.MGMT_SLACK_WEBHOOK_URL }}
